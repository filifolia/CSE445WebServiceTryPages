//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proj3TryItPage.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/zipTimeService", ReplyAction="http://tempuri.org/IService1/zipTimeServiceResponse")]
        string zipTimeService(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/zipTimeService", ReplyAction="http://tempuri.org/IService1/zipTimeServiceResponse")]
        System.Threading.Tasks.Task<string> zipTimeServiceAsync(string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/temperatureCityCountry", ReplyAction="http://tempuri.org/IService1/temperatureCityCountryResponse")]
        string temperatureCityCountry(string city, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/temperatureCityCountry", ReplyAction="http://tempuri.org/IService1/temperatureCityCountryResponse")]
        System.Threading.Tasks.Task<string> temperatureCityCountryAsync(string city, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DictionaryDefine", ReplyAction="http://tempuri.org/IService1/DictionaryDefineResponse")]
        string[] DictionaryDefine(string toBeDefined);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DictionaryDefine", ReplyAction="http://tempuri.org/IService1/DictionaryDefineResponse")]
        System.Threading.Tasks.Task<string[]> DictionaryDefineAsync(string toBeDefined);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Proj3TryItPage.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Proj3TryItPage.ServiceReference2.IService1>, Proj3TryItPage.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string zipTimeService(string zipCode) {
            return base.Channel.zipTimeService(zipCode);
        }
        
        public System.Threading.Tasks.Task<string> zipTimeServiceAsync(string zipCode) {
            return base.Channel.zipTimeServiceAsync(zipCode);
        }
        
        public string temperatureCityCountry(string city, string country) {
            return base.Channel.temperatureCityCountry(city, country);
        }
        
        public System.Threading.Tasks.Task<string> temperatureCityCountryAsync(string city, string country) {
            return base.Channel.temperatureCityCountryAsync(city, country);
        }
        
        public string[] DictionaryDefine(string toBeDefined) {
            return base.Channel.DictionaryDefine(toBeDefined);
        }
        
        public System.Threading.Tasks.Task<string[]> DictionaryDefineAsync(string toBeDefined) {
            return base.Channel.DictionaryDefineAsync(toBeDefined);
        }
    }
}
